{"ast":null,"code":"import { associateActions as associateActions$1 } from './associateActions.js';\nimport { setState as setState$1 } from './setState.js';\nimport { customHook as customHook$1 } from './customHook.js';\nimport { runListeners as runListeners$1 } from './runListeners.js';\nimport { setupOptions as setupOptions$1 } from './setupOptions.js';\n\nconst useStore = (React, initialState, actions, options) => {\n  const store = {\n    state: initialState,\n    listeners: []\n  };\n  store.setState = setState$1.bind(null, store);\n  store.runListeners = runListeners$1.bind(null, store);\n  store.actions = associateActions$1(store, actions);\n  setupOptions$1(store, options);\n  return customHook$1.bind(null, store, React);\n};\n\nexport default useStore;","map":{"version":3,"sources":["E:/DanfeOnlineStore/client/node_modules/use-global-hook/esm/core/index.js"],"names":["associateActions","associateActions$1","setState","setState$1","customHook","customHook$1","runListeners","runListeners$1","setupOptions","setupOptions$1","useStore","React","initialState","actions","options","store","state","listeners","bind"],"mappings":"AAAA,SAASA,gBAAgB,IAAIC,kBAA7B,QAAuD,uBAAvD;AACA,SAASC,QAAQ,IAAIC,UAArB,QAAuC,eAAvC;AACA,SAASC,UAAU,IAAIC,YAAvB,QAA2C,iBAA3C;AACA,SAASC,YAAY,IAAIC,cAAzB,QAA+C,mBAA/C;AACA,SAASC,YAAY,IAAIC,cAAzB,QAA+C,mBAA/C;;AAEA,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,YAAR,EAAsBC,OAAtB,EAA+BC,OAA/B,KAA2C;AAC1D,QAAMC,KAAK,GAAG;AACZC,IAAAA,KAAK,EAAEJ,YADK;AAEZK,IAAAA,SAAS,EAAE;AAFC,GAAd;AAIAF,EAAAA,KAAK,CAACb,QAAN,GAAiBC,UAAU,CAACe,IAAX,CAAgB,IAAhB,EAAsBH,KAAtB,CAAjB;AACAA,EAAAA,KAAK,CAACT,YAAN,GAAqBC,cAAc,CAACW,IAAf,CAAoB,IAApB,EAA0BH,KAA1B,CAArB;AACAA,EAAAA,KAAK,CAACF,OAAN,GAAgBZ,kBAAkB,CAACc,KAAD,EAAQF,OAAR,CAAlC;AACAJ,EAAAA,cAAc,CAACM,KAAD,EAAQD,OAAR,CAAd;AACA,SAAOT,YAAY,CAACa,IAAb,CAAkB,IAAlB,EAAwBH,KAAxB,EAA+BJ,KAA/B,CAAP;AACD,CAVD;;AAYA,eAAeD,QAAf","sourcesContent":["import { associateActions as associateActions$1 } from './associateActions.js';\nimport { setState as setState$1 } from './setState.js';\nimport { customHook as customHook$1 } from './customHook.js';\nimport { runListeners as runListeners$1 } from './runListeners.js';\nimport { setupOptions as setupOptions$1 } from './setupOptions.js';\n\nconst useStore = (React, initialState, actions, options) => {\n  const store = {\n    state: initialState,\n    listeners: []\n  };\n  store.setState = setState$1.bind(null, store);\n  store.runListeners = runListeners$1.bind(null, store);\n  store.actions = associateActions$1(store, actions);\n  setupOptions$1(store, options);\n  return customHook$1.bind(null, store, React);\n};\n\nexport default useStore;\n"]},"metadata":{},"sourceType":"module"}
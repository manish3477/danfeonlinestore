{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UserAPI(token) {\n  _s();\n\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [history, setHistory] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          setCart(res.data.cart);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    history: [history, setHistory]\n  };\n}\n\n_s(UserAPI, \"WxgtHEsX2x1nke8mxWBolVaDs6M=\");\n\n_c = UserAPI;\nexport default UserAPI;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserAPI\");","map":{"version":3,"sources":["E:/DanfeOnlineStore/client/src/api/UserAPI.js"],"names":["useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","history","setHistory","getUser","res","get","headers","Authorization","data","role","setCart","cart","err","alert","response","msg"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIG,KAAJ,EAAW;AACP,YAAMO,OAAO,GAAG,YAAY;AACxB,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,aAAV,EAAyB;AACvCC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,aAAa,EAAEX;AAAjB;AAD8B,WAAzB,CAAlB;AAIAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAM,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBT,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AAEAU,UAAAA,OAAO,CAACN,GAAG,CAACI,IAAJ,CAASG,IAAV,CAAP;AAEH,SAVD,CAUE,OAAOC,GAAP,EAAY;AACVC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaN,IAAb,CAAkBO,GAAnB,CAAL;AACH;AACJ,OAdD;;AAgBAZ,MAAAA,OAAO;AAEV;AACJ,GArBQ,EAqBN,CAACP,KAAD,CArBM,CAAT;AA0BA,SAAO;AACHC,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADP;AAEHC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAFN;AAIHC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV;AAJN,GAAP;AAMH;;GArCQP,O;;KAAAA,O;AAuCT,eAAeA,OAAf","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nfunction UserAPI(token) {\r\n    const [isLogged, setIsLogged] = useState(false)\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n    const [history, setHistory] = useState([])\r\n\r\n    useEffect(() => {\r\n        if (token) {\r\n            const getUser = async () => {\r\n                try {\r\n                    const res = await axios.get('/user/infor', {\r\n                        headers: { Authorization: token }\r\n                    })\r\n\r\n                    setIsLogged(true)\r\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\r\n\r\n                    setCart(res.data.cart)\r\n\r\n                } catch (err) {\r\n                    alert(err.response.data.msg)\r\n                }\r\n            }\r\n\r\n            getUser()\r\n\r\n        }\r\n    }, [token])\r\n\r\n\r\n\r\n    \r\n    return {\r\n        isLogged: [isLogged, setIsLogged],\r\n        isAdmin: [isAdmin, setIsAdmin],\r\n        \r\n        history: [history, setHistory]\r\n    }\r\n}\r\n\r\nexport default UserAPI"]},"metadata":{},"sourceType":"module"}